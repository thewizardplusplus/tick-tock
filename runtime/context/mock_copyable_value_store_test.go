// Code generated by mockery v1.0.0. DO NOT EDIT.

package context

import mapset "github.com/deckarep/golang-set"
import mock "github.com/stretchr/testify/mock"

// MockCopyableValueStore is an autogenerated mock type for the CopyableValueStore type
type MockCopyableValueStore struct {
	mock.Mock
}

// Copy provides a mock function with given fields:
func (_m *MockCopyableValueStore) Copy() CopyableValueStore {
	ret := _m.Called()

	var r0 CopyableValueStore
	if rf, ok := ret.Get(0).(func() CopyableValueStore); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(CopyableValueStore)
		}
	}

	return r0
}

// SetValue provides a mock function with given fields: name, value
func (_m *MockCopyableValueStore) SetValue(name string, value interface{}) {
	_m.Called(name, value)
}

// Value provides a mock function with given fields: name
func (_m *MockCopyableValueStore) Value(name string) (interface{}, bool) {
	ret := _m.Called(name)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(string) interface{}); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// ValuesNames provides a mock function with given fields:
func (_m *MockCopyableValueStore) ValuesNames() mapset.Set {
	ret := _m.Called()

	var r0 mapset.Set
	if rf, ok := ret.Get(0).(func() mapset.Set); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(mapset.Set)
		}
	}

	return r0
}
