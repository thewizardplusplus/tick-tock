'name': 'Tick-tock'
'scopeName': 'source.ticktock'
'fileTypes': ['tt']
'patterns': [
  # line comments
  {
    'begin': '//'
    'end': '$'
    'name': 'comment.line.ticktock'
  }

  # block comments
  {
    'begin': '/\\*'
    'end': '\\*/'
    'name': 'comment.block.ticktock'
  }

  # interpreted string literals
  {
    'begin': '"'
    'end': '"'
    'name': 'string.quoted.double.ticktock'
    'patterns': [{
      'match': '\\\\([0-7]{3}|[abfnrtv\\\\\'"]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})'
      'name': 'constant.character.escape.ticktock'
    }]
  }

  # raw string literals
  {
    'begin': '`'
    'end': '`'
    'name': 'string.quoted.raw.ticktock',
  }

  # keywords
  {
    'match': '\\b(actor|state|message)\\b'
    'name': 'keyword.ticktock'
  }

  # language constants
  {
    'match': '\\b(__initialization__|__initialize__)\\b'
    'name': 'constant.language.ticktock'
  }

  # built-in functions
  {
    'match': '\\b(send|set|out|exit)\\b'
    'name': 'support.function.builtin.ticktock'
  }

  # variables
  {
    'match': '\\w+'
    'name': 'variable.other.ticktock'
  }

  # terminators
  {
    'match': ';'
    'name': 'punctuation.terminator.ticktock'
  }
]
